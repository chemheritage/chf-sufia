<%# overridden from sufia to:

    * unwrap some of the layers of partial indirection, to make it easier to:
    * use something for search results and sort/per-page that's more like our
      standard search results (but still with special collections controls? not sure if needed.)
    * cleaner layout of top collection description part, using more flexbox less bootstrap

The underlying code in stack is a mess, so this override seems perhaps likely to break on future upgrades.
%>

<% provide :page_title, construct_page_title(@presenter.title) %>
<div itemscope itemtype="http://schema.org/CollectionPage" class="row collection-show">
  <div class="show-admin">
    <%= render 'collections/show_actions', presenter: @presenter %>
  </div>

  <div class="collection-top clearfix">


    <div class="show-title">
      <header>
        <% if @presenter.needs_permission_badge? %>
          <div class="show-permission-badge">
            <%= @presenter.permission_badge %>
          </div>
        <% end %>

        <div class="show-genre">Collection</div>
        <h1><%= @presenter.title.first %></h1>
      </header>
      <%= pluralize(@presenter.total_items, "Item") %>
    </div>

    <div class="show-representative">
      <%= render 'collections/media_display', presenter: @presenter %>
    </div>

    <div class="show-metadata">
      <%= render 'collection_description', presenter: @presenter %>

      <%# we handle metadata more like is done on work show page %>
      <%# render 'collections/show_descriptions' %>

      <table class="<%= dom_class(@presenter) %> chf-attributes">
        <% @presenter.urls_to_catalog.each do |url| %>
          <tr>
            <td colspan="2"><%= link_to "View in library catalog", url %></td>
          </tr>
        <% end %>

        <%= @presenter.attribute_to_html(:related_url, render_as: :chf_related_url) %>
      </table>


    </div>
  </div>

  <div class="row">
    <h2 class="col-sm-6 col-md-7 col-lg-6 h3 brand-alt-h3">
          Search within this Collection
    </h2>
    <div class="col-sm-6 col-md-5 col-lg-6"><%= render 'search_form', presenter: @presenter %></div>
  </div>


  <%# built in sufia collections/sort_and_per_page overrides to some years old Blacklight. We want
      the normal one we're actually using. %>
    <%# render 'sort_and_per_page', collection: @presenter %>

    <%# but first some preperatory stuff we don't understand from sufia collections/sort_and_per_page.
        This may not actually be neccesary, but take from:
        https://github.com/samvera/sufia/blob/v7.3.0/app/views/collections/_sort_and_per_page.html.erb
    %>
    <div class="batch-info">
      <div>
        <%= render partial: 'collections/form_for_select_collection', locals: { user_collections: @user_collections }  %>
      </div>

      <% if params[:action] == "edit" && @response.response['numFound'] > 1 %>
        <div class="batch-toggle">
          <% session[:batch_edit_state] = "on" %>
          <%= button_for_remove_selected_from_collection collection %>
        </div>
      <% end %>
    </div>

    <%# now we just call out to our own overridden catalog/search_header
        Note we are also setting blacklight_config.index.collection_actions["view_type_group"] in CollectionsController,
        to use the catalog view_type_group partial instead of the overridden sufia one which doesn't have
        the same classes
    %>
    <%= render 'catalog/search_header' %>


  <%#  replacing `render_document_index @member_docs` %>
    <%# not sure what some of this is about, but this is extracted from:
        https://github.com/samvera/sufia/blob/v7.3.0/app/views/collections/_document_list.html.erb

        which ends up being called by `render_document_index` %>

    <% @all_checked = false %>
    <% @user = current_user %>

    <% if @member_docs.empty? %>
      <div class="alert alert-warning" role="alert"><%= t('sufia.collection.document_list.no_visible_works') %></div>
    <% else %>
      <% @document_list = @member_docs %>
      <% if params[:action] == "edit" %>
        <%= render partial:'my/_index_partials/default_group', locals:{documents: @member_docs, docs:@member_docs} %>
      <% else %>
        <%# this part we override to render our own thing instead of sufia's thing for individual
             results. Used to be:  `render partial: 'show_document_list', locals:{documents: documents}`, which
             would be: https://github.com/samvera/sufia/blob/v7.3.0/app/views/collections/_show_document_list.html.erb %>
        <ul class="list-unstyled">
          <%# this assumes all members are GenericWorks suitable for rendering by this partial. Couldn't figure
              out how to use Blacklight core stuff to choose the item-specific partial correctly. Sorry, fragile, yes.

              TODO unacceptable, get it to look up properly somehow %>
          <%= render partial: "curation_concerns/generic_works/generic_work", collection: @member_docs %>
        </ul>
      <% end %>
    <% end %>

  <%# end replacing `render_document_index @member_docs/ %>



  <%# render_document_index @member_docs %>

  <%# render 'paginate' %>

  <%# copied from our customized catalog/results_pagination, sorry no DRY, it's beyond me at this point %>

  <% if show_pagination? and @response.total_pages > 1 %>
      <%# expanded will be shown by CSS at large screen sizes, else compact %>

      <div class="pagination pagination-alt-expanded">
        <%= paginate @response, :window => 2, :outer_window => 0, :theme => 'twitter-bootstrap-3' %>
      </div>

      <div class="pagination pagination-alt-compact">
        <%= paginate @response, :page_entries_info => page_entries_info(@response), :theme => 'blacklight_compact' %>
      </div>

  <% end %>

</div>
