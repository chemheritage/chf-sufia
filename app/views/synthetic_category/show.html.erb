<%# meant to look the same as our local collections/show, but it was too hard to re-use that
    view, too many things don't apply, even when we tried to make the SyntheticCateogry class
    have similar API to collection presenter.  So a non-DRY copy paste and alter, sorry! %>

<% provide :page_title, construct_page_title(synthetic_category.title) %>

<div itemscope itemtype="http://schema.org/CollectionPage" class="collection-show">


  <div class="collection-top">
    <div class="collection-desc clearfix">
      <div class="show-title">
        <header>
          <div class="show-genre"><%= link_to "Features", root_path %></div>
          <h1><%= synthetic_category.title %></h1>
        </header>
      </div>

      <div class="show-metadata">
        <p class="show-item-count"><%= number_with_delimiter(total_count) + ' item'.pluralize(total_count) %></p>

        <p class="collection_description"><%= synthetic_category.description %></p>
      </div>
    </div>

    <div class="collection-thumb">
      <%= image_tag synthetic_category.thumb_asset_path %>
    </div>
  </div>


  <div class="chf-collection-search">
    <h2 class="chf-collection-search-title">
          Search within featured <%= synthetic_category.title %> items
    </h2>
    <div class="chf-collection-search-form"><%= render 'search_form', presenter: @presenter %></div>
  </div>



  <%# built in sufia collections/sort_and_per_page overrides to some years old Blacklight. We want
      the normal one we're actually using. %>
    <%# render 'sort_and_per_page', collection: @presenter %>

    <%# now we just call out to our own overridden catalog/search_header
        Note we are also setting blacklight_config.index.collection_actions["view_type_group"] in CollectionsController,
        to use the catalog view_type_group partial instead of the overridden sufia one which doesn't have
        the same classes
    %>
    <% if results.count != 1 %>
      <%= render 'catalog/search_header' %>
    <% end %>




    <ul class="list-unstyled collection-items">
      <%# Don't entirely understand how this works to get the proper partial, but it does,
          and should work for hetereogenous lists too. Basically taken from sufia
          https://github.com/samvera/sufia/blob/v7.3.0/app/views/catalog/_document_list.html.erb
       %>
      <%= render partial: "curation_concerns/generic_works/generic_work", collection: results %>
    </ul>





  <% if show_pagination? and @response.total_pages > 1 %>
      <%# expanded will be shown by CSS at large screen sizes, else compact %>

      <div class="pagination pagination-alt-expanded">
        <%= paginate @response, :window => 3, :outer_window => 1, :theme => 'local' %>
      </div>

      <div class="pagination pagination-alt-compact">
        <%= paginate @response, :page_entries_info => page_entries_info(@response), :theme => 'blacklight_compact' %>
      </div>

  <% end %>

</div>
